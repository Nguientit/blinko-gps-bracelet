# HTTP -> HTTPS redirect
server {
    listen 80;
    server_name blinko.blog www.blinko.blog;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS reverse proxy
server {
    listen 443 ssl;
    server_name blinko.blog www.blinko.blog;

    ssl_certificate /etc/letsencrypt/live/blinko.blog/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blinko.blog/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # ROOT: Trỏ đến thư mục build để Nginx tự tìm file tĩnh
    root /app/build; 

    # 1. Location cho API và Services
    location /services/ {
        proxy_pass http://app:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /api/ {
        proxy_pass http://app:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 2. Location cho Frontend (React/SPA) - SỬ DỤNG TRY_FILES VÀ FALLBACK
    location / {
        root /app/build;
        # Cố gắng tìm file: 1) File tồn tại? 2) Thư mục tồn tại? 3) Nếu không, chuyển sang @fallback
        try_files $uri $uri/ @fallback;
    }
    
    # 3. Location Fallback (@fallback)
    location @fallback {
        # Proxy yêu cầu index.html về Node.js (để Node.js serve file này)
        # Nginx đã tìm không thấy file, nên nó gửi yêu cầu cho Node.js để Node.js xử lý SPA
        proxy_pass http://app:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}